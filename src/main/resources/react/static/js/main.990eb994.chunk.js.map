{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["url","window","location","hostname","port","webSocket","WebSocket","ChatNavBar","Navbar","bg","expand","style","paddingRight","Brand","href","fontSize","fontWeight","Image","alt","src","width","height","className","Nav","Item","this","props","username","React","Component","ChatRoomMember","handleClick","bind","event","target","tagName","switchUser","lastChild","id","clearCount","group","count","undefined","Badge","variant","marginLeft","ListGroup","action","onClick","role","showBadge","ChatRoomAction","handleBroadcast","handleLeave","handleJoin","handleClose","handleCancel","handleJoinError","handleSend","handleChange","state","message","broadcastError","showJoinError","showBroadcastPanel","setState","$","post","JSON","stringify","groupName","chatRoom","text","parse","status","sendMessage","type","sender","receiver","name","value","owner","padding","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","controlId","Control","as","rows","onChange","Text","Footer","Button","users","i","length","isMember","joinedUsers","ChatRoom","filter","member","map","key","sum","values","Object","sumAll","Card","Accordion","Toggle","eventKey","disabled","Collapse","listChatRoomMembers","ChatRoomList","handleOpen","handleCreate","handleResponse","showCreatePanel","minAge","maxAge","region","school","groupNameError","ageError","regionError","schoolError","createChatRoomError","options","selected","push","test","parseInt","isNaN","data","locations","schools","error","Alert","idx","list","concat","other","Row","Col","size","block","marginBottom","aria-labelledby","centered","Label","placeholder","multiple","vlaue","showAlert","listRooms","ChatDialog","chat","dialog","user","paddingTop","paddingBottom","Container","margin","maxWidth","listDialogs","ChatPanel","messageError","addMessage","frameBorder","overflow","initialContent","Notification","msg","note","position","right","top","Toast","autohide","delay","onClose","showHeader","Register","handleRegister","age","usernameError","registered","registerError","AccessError","App","onmessage","onMessage","updateList","getList","handleNoteClose","handleAccessErrClose","_","accessError","notification","groups","msgEvent","console","log","addNotification","fields","split","rooms","send","md","Boolean","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.990eb994.chunk.js","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport {Navbar, Nav, Form, Button, Image, Container, Row, Col, Accordion, Card, ListGroup, Toast, Modal, Alert, Badge} from 'react-bootstrap';\r\nimport Frame from \"react-frame-component\";\r\n\r\nconst url = (window.location.hostname === \"localhost\" ? \"http://\" : \"https://\")\r\n    + window.location.hostname + \":\" + window.location.port + \"/\";\r\nconst webSocket = new WebSocket((window.location.hostname === \"localhost\" ? \"ws://\" : \"wss://\")\r\n    + window.location.hostname + \":\" + window.location.port + \"/tofu\");\r\n\r\nfunction isMember(username, users) {\r\n  for (let i = 0; i < users.length; ++i) {\r\n    if (users[i].username === username) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nclass ChatNavBar extends React.Component {\r\n  render() {\r\n    return (\r\n        <Navbar bg=\"white\" expand=\"lg\" style={{paddingRight: \"30px\"}}>\r\n          <Navbar.Brand href=\"#home\" style={{fontSize: '30px', fontWeight: \"500\"}}>\r\n            <Image alt=\"logo\" src=\"image/logo.png\" width=\"40\" height=\"40\" className=\"d-inline-block align-center\"/>\r\n            &nbsp;&nbsp;&nbsp;WashU Chat\r\n          </Navbar.Brand>\r\n          <Nav className=\"ml-auto align-center\" style={{fontSize: '20px'}}>\r\n            <Nav.Item>User: {this.props.username}</Nav.Item>\r\n          </Nav>\r\n        </Navbar>\r\n    )\r\n  }\r\n}\r\n\r\nclass ChatRoomMember extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(event) {\r\n    if (event.target.tagName === \"BUTTON\") {\r\n      this.props.switchUser(event.target.lastChild.id);\r\n    } else {\r\n      this.props.switchUser(event.target.id);\r\n    }\r\n    this.props.clearCount(this.props.group, this.props.username);\r\n  }\r\n\r\n  showBadge(count) {\r\n    if (count === undefined || count === 0) {\r\n      return <></>\r\n    } else {\r\n      return <Badge variant={\"secondary\"} style={{marginLeft: \"10px\"}} id={this.props.group + '_' + this.props.username}>{count}</Badge>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <ListGroup.Item action variant={\"none\"} onClick={this.handleClick}>\r\n          <Image id={this.props.group + '_' + this.props.username} src={\"image/\" + this.props.role + \".png\"} style={{height: \"20px\"}} />\r\n          <div className={\"btn\"} id={this.props.group + '_' + this.props.username}>{this.props.username}{this.showBadge(this.props.count)}</div>\r\n        </ListGroup.Item>\r\n    )\r\n  }\r\n}\r\n\r\nclass ChatRoomAction extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleBroadcast = this.handleBroadcast.bind(this);\r\n    this.handleLeave = this.handleLeave.bind(this);\r\n    this.handleJoin = this.handleJoin.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleCancel = this.handleCancel.bind(this);\r\n    this.handleJoinError = this.handleJoinError.bind(this);\r\n    this.handleSend = this.handleSend.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.state = {\r\n      message: \"\",\r\n      broadcastError: \"\",\r\n      showJoinError: false,\r\n      showBroadcastPanel: false\r\n    }\r\n  }\r\n\r\n  handleBroadcast() {\r\n    this.setState({ showBroadcastPanel: true });\r\n  }\r\n\r\n  handleJoin() {\r\n    $.post(url + \"join\", JSON.stringify({\r\n      username: this.props.username,\r\n      groupName: this.props.chatRoom.groupName\r\n    }), this.handleJoinError);\r\n  }\r\n\r\n  handleLeave() {\r\n    $.post(url + \"leave\", JSON.stringify({\r\n      username: this.props.username,\r\n      groupName: this.props.chatRoom.groupName\r\n    }));\r\n  }\r\n\r\n  handleJoinError(text) {\r\n    let data = JSON.parse(text);\r\n    if (data.status === 403) {\r\n      this.setState({showJoinError: true});\r\n    }\r\n  }\r\n\r\n  handleClose(event) {\r\n    this.setState({ showJoinError: false });\r\n  }\r\n\r\n  handleCancel(event) {\r\n    this.setState({ showBroadcastPanel: false});\r\n  }\r\n\r\n  handleSend(event) {\r\n    if (this.state.message === \"\") {\r\n      this.setState({ broadcastError: \"Broadcast message cannot be empty.\"});\r\n    } else {\r\n      this.setState({ broadcastError: \"\", showBroadcastPanel: false});\r\n      this.props.sendMessage(JSON.stringify({\r\n        type: \"all\",\r\n        groupName: this.props.chatRoom.groupName,\r\n        sender: this.props.username,\r\n        receiver: \"\",\r\n        text: this.state.message\r\n      }));\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.props.chatRoom.owner === this.props.username) {\r\n      return (\r\n          <div className={\"btn float-right\"} style={{padding: \"auto\"}}>\r\n            <Image src=\"image/broadcast.png\" style={{height: \"20px\"}} onClick={this.handleBroadcast}/>\r\n            <Modal show={this.state.showBroadcastPanel} onHide={this.handleCancel}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Broadcast</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <Form>\r\n                  <Form.Group controlId=\"broadcastMessage\">\r\n                    <Form.Control name={\"message\"} value={this.state.message} as=\"textarea\" rows=\"3\" onChange={this.handleChange}/>\r\n                    <Form.Text className=\"text-muted\">\r\n                      {this.state.broadcastError}\r\n                    </Form.Text>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleCancel}>\r\n                  Cancel\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={this.handleSend}>\r\n                  Send\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n      )\r\n    } else if (isMember(this.props.username, this.props.chatRoom.joinedUsers)) {\r\n      return (\r\n          <div className={\"btn float-right\"} style={{padding: \"auto\"}}>\r\n            <Image src=\"image/leave.png\" style={{height: \"20px\"}} onClick={this.handleLeave}/>\r\n          </div>\r\n      )\r\n    } else {\r\n      return (\r\n          <div className={\"btn float-right\"} style={{padding: \"auto\"}}>\r\n            <Image src=\"image/join.png\" style={{height: \"20px\"}} onClick={this.handleJoin}/>\r\n            <Modal show={this.state.showJoinError} onHide={this.handleClose}>\r\n              <Modal.Header closeButton>\r\n                <Modal.Title>Sorry</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>You are not allowed to join this chat room due to restrictions.</Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={this.handleClose}>\r\n                  Close\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nclass ChatRoom extends React.Component {\r\n  listChatRoomMembers() {\r\n    return this.props.chatRoom.joinedUsers.filter(member => member.username !== this.props.username).map(member =>\r\n        <ChatRoomMember key={this.props.chatRoom.groupName + '_' + member.username}\r\n                        count={this.props.count === undefined ? undefined : this.props.count[member.username]}\r\n                        switchUser={this.props.switchUser}\r\n                        clearCount={this.props.clearCount}\r\n                        group={this.props.chatRoom.groupName}\r\n                        username={member.username}\r\n                        role={member.username === this.props.chatRoom.owner ? \"admin\" : \"user\"}/>\r\n    );\r\n  }\r\n\r\n  sumAll(count) {\r\n    let sum = 0;\r\n    let values = Object.values(count);\r\n    for (let i=0; i<values.length; ++i) {\r\n      sum += values[i];\r\n    }\r\n    return sum;\r\n  }\r\n\r\n  showBadge(count) {\r\n    if (count === undefined || this.sumAll(count) === 0) {\r\n      return <></>;\r\n    } else {\r\n      return <Badge variant={\"secondary\"} style={{marginLeft: \"10px\"}}>{this.sumAll(count)}</Badge>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Card>\r\n          <Accordion.Toggle as={Card.Header} eventKey={this.props.id}>\r\n            <div className={\"btn\"} disabled={true} style={{fontWeight: \"500\"}}>{this.props.chatRoom.groupName}{this.showBadge(this.props.count)}</div>\r\n            <ChatRoomAction chatRoom={this.props.chatRoom} username={this.props.username} sendMessage={this.props.sendMessage}/>\r\n          </Accordion.Toggle>\r\n          <Accordion.Collapse eventKey={this.props.id}>\r\n            <Card.Body>\r\n              <ListGroup variant={\"flush\"}>\r\n                {this.listChatRoomMembers()}\r\n              </ListGroup>\r\n            </Card.Body>\r\n          </Accordion.Collapse>\r\n        </Card>\r\n    )\r\n  }\r\n}\r\n\r\nclass ChatRoomList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleOpen = this.handleOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleCreate = this.handleCreate.bind(this);\r\n    this.handleResponse = this.handleResponse.bind(this);\r\n\r\n    this.state = {\r\n      showCreatePanel: false,\r\n      groupName: \"\",\r\n      minAge: \"\",\r\n      maxAge: \"\",\r\n      region: [\"na\"],\r\n      school: [\"washu\"],\r\n      groupNameError: \"\",\r\n      ageError: \"\",\r\n      regionError: \"\",\r\n      schoolError: \"\",\r\n      createChatRoomError: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    if (event.target.name === \"region\" || event.target.name === \"school\") {\r\n      let options = event.target.options;\r\n      let values = [];\r\n      for (let i=0; i<options.length; ++i ) {\r\n        if (options[i].selected) {\r\n          values.push(options[i].value);\r\n        }\r\n      }\r\n      this.setState({\r\n        [event.target.name]: values\r\n      })\r\n    } else {\r\n      this.setState({\r\n        [event.target.name]: event.target.value\r\n      });\r\n    }\r\n  }\r\n\r\n  handleCreate(event) {\r\n    let regx = /^[0-9a-zA-Z]+$/;\r\n    if (!regx.test(this.state.groupName)) {\r\n      this.setState({groupNameError: \"Only letters and numbers are allowed\"});\r\n      return;\r\n    } else {\r\n      this.setState({groupNameError: \"\"});\r\n    }\r\n\r\n    let minAge = parseInt(this.state.minAge);\r\n    let maxAge = parseInt(this.state.maxAge);\r\n    if (isNaN(minAge) || isNaN(maxAge) || minAge < 0 || maxAge < 0 ) {\r\n      this.setState({ageError: \"Age must be an integer no less than 0\"});\r\n      return;\r\n    } else {\r\n      this.setState({ageError: \"\"});\r\n    }\r\n\r\n    if (this.state.region.length === 0) {\r\n      this.setState({regionError: \"Must select at least 1 region\"});\r\n    } else {\r\n      this.setState({regionError: \"\"});\r\n    }\r\n\r\n    if (this.state.school.length === 0) {\r\n      this.setState({schoolError: \"Must select at least 1 school\"});\r\n    } else {\r\n      this.setState({schoolError: \"\"});\r\n    }\r\n\r\n    let data = {\r\n      groupName: this.state.groupName,\r\n      owner: this.props.username,\r\n      minAge: this.state.minAge,\r\n      maxAge: this.state.maxAge,\r\n      locations: this.state.region,\r\n      schools: this.state.school\r\n    };\r\n    $.post(url + \"create\", JSON.stringify(data), this.handleResponse)\r\n  }\r\n\r\n  handleResponse(text) {\r\n    let data = JSON.parse(text);\r\n    if (data.status === 200) {\r\n      this.setState({showCreatePanel: false, createChatRoomError: \"\"});\r\n    } else {\r\n      this.setState({showCreatePanel: true, createChatRoomError: \"Chat room name already used. Please choose another one.\"});\r\n    }\r\n  }\r\n\r\n  showAlert(error) {\r\n    if (error !== \"\") {\r\n      return <Alert variant={\"danger\"}>{error}</Alert>\r\n    }\r\n  }\r\n\r\n  handleOpen() {\r\n    this.setState({showCreatePanel: true});\r\n  }\r\n\r\n  handleClose() {\r\n    this.setState({showCreatePanel: false});\r\n  }\r\n\r\n  listRooms() {\r\n    let idx = 0;\r\n    let chatRooms = this.props.list.owner.concat(this.props.list.member, this.props.list.other);\r\n    return chatRooms.map((chatRoom) =>\r\n      <ChatRoom key={chatRoom.groupName}\r\n                id={idx++}\r\n                count={this.props.count[chatRoom.groupName]}\r\n                chatRoom={chatRoom}\r\n                username={this.props.username}\r\n                switchUser={this.props.switchUser}\r\n                clearCount={this.props.clearCount}\r\n                sendMessage={this.props.sendMessage}/>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <>\r\n          <Row>\r\n            <Col>\r\n              <Button variant=\"outline-secondary\" size=\"lg\" block style={{marginBottom: \"20px\"}} onClick={this.handleOpen}>\r\n                Create Chat Room\r\n              </Button>\r\n              <Modal size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={this.state.showCreatePanel} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Create Chat Room\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Form>\r\n                    <Form.Group controlId=\"groupName\">\r\n                      <Form.Label>Chat Room Name</Form.Label>\r\n                      <Form.Control name=\"groupName\" type=\"text\" placeholder=\"Choose your chat room name\" value={this.state.groupName} onChange={this.handleChange}/>\r\n                      <Form.Text className=\"text-muted\">\r\n                        {this.state.groupNameError}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Row>\r\n                      <Form.Group as={Col} controlId=\"age\">\r\n                        <Form.Label>Min Age</Form.Label>\r\n                        <Form.Control name=\"minAge\" type=\"text\" placeholder=\"Enter min age\" value={this.state.minAge} onChange={this.handleChange}/>\r\n                        <Form.Text className=\"text-muted\">\r\n                          {this.state.ageError}\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n                      <Form.Group as={Col} controlId=\"age\">\r\n                        <Form.Label>Max Age</Form.Label>\r\n                        <Form.Control name=\"maxAge\" type=\"text\" placeholder=\"Enter max age\" value={this.state.maxAge} onChange={this.handleChange}/>\r\n                      </Form.Group>\r\n                    </Form.Row>\r\n\r\n                    <Form.Group controlId=\"region\">\r\n                      <Form.Label>Region</Form.Label>\r\n                      <Form.Control name=\"region\" as=\"select\" value={this.state.region} onChange={this.handleChange} multiple>\r\n                        <option value=\"na\">NA</option>\r\n                        <option value=\"as\">AS</option>\r\n                        <option value=\"eu\">EU</option>\r\n                        <option vlaue=\"sa\">SA</option>\r\n                        <option value=\"oa\">OA</option>\r\n                        <option value=\"af\">AF</option>\r\n                      </Form.Control>\r\n                      <Form.Text className=\"text-muted\">\r\n                        {this.state.regionError}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"school\">\r\n                      <Form.Label>School</Form.Label>\r\n                      <Form.Control name=\"school\" as=\"select\" value={this.state.school} onChange={this.handleChange} multiple>\r\n                        <option value=\"washu\">WashU</option>\r\n                        <option value=\"ucb\">UCB</option>\r\n                        <option value=\"uiuc\">UIUC</option>\r\n                        <option value=\"nyu\">NYU</option>\r\n                      </Form.Control>\r\n                      <Form.Text className=\"text-muted\">\r\n                        {this.state.schoolError}\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    {this.showAlert(this.state.createChatRoomError)}\r\n\r\n                  </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant={\"secondary\"} onClick={this.handleCreate}>Create</Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Accordion style={{marginBottom: \"20px\"}}>\r\n                {this.listRooms()}\r\n              </Accordion>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nclass ChatDialog extends React.Component {\r\n  listDialogs() {\r\n    let idx = 0;\r\n    return this.props.chat.map((dialog) => {\r\n      if (dialog.user === this.props.username) {\r\n        return (\r\n            <Row key={idx++}>\r\n              <Col>\r\n                <div className={\"float-right\"}>\r\n                  <Card style={{marginBottom: \"20px\"}}>\r\n                    <Card.Body style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>{dialog.text}</Card.Body>\r\n                  </Card>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n        )\r\n      } else {\r\n        return (\r\n            <Row key={idx++}>\r\n              <Col>\r\n                <div className={\"float-left\"}>\r\n                  <Card style={{marginBottom: \"20px\"}}>\r\n                    <Card.Body style={{paddingTop: \"10px\", paddingBottom: \"10px\"}}>{dialog.text}</Card.Body>\r\n                  </Card>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Container style={{margin: \"0\", width: \"auto\", maxWidth: \"none\"}}>\r\n          {this.listDialogs()}\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nclass ChatPanel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSend = this.handleSend.bind(this);\r\n\r\n    this.state = {\r\n      message: \"\",\r\n      messageError: \"\"\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSend() {\r\n    if (this.state.message === \"\") {\r\n      this.setState({ messageError: \"Message cannot be empty\"} );\r\n    } else {\r\n      this.setState({ message: \"\", messageError: \"\" });\r\n      let data = {\r\n        type: \"one\",\r\n        groupName: this.props.group,\r\n        sender: this.props.username,\r\n        receiver: this.props.user,\r\n        text: this.state.message\r\n      };\r\n      this.props.sendMessage(JSON.stringify(data));\r\n      this.props.addMessage(data);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.props.user === \"\") {\r\n      return <></>\r\n    }\r\n    return (\r\n        <Card style={{height: \"80vh\"}}>\r\n          <Card.Header>{\"Room: \" + this.props.group + \" / User: \" + this.props.user}</Card.Header>\r\n          <Card.Body>\r\n            <Frame width={\"100%\"} height={\"100%\"} frameBorder={\"no\"} style={{overflow: \"hidden\"}} initialContent={\r\n              \"<!DOCTYPE html><html><head>\" +\r\n              \"<link rel=\\\"stylesheet\\\"\\n\" +\r\n              \"href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\\\"\\n\" +\r\n              \"integrity=\\\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\\\"\\n\" +\r\n              \"crossorigin=\\\"anonymous\\\"\\n\" +\r\n              \"/>\" +\r\n              \"<style>body::-webkit-scrollbar{display:none}</style>\\n\" +\r\n              \"</head><body><div></div></body></html>\"}>\r\n              <ChatDialog chat={this.props.chat} username={this.props.username}/>\r\n            </Frame>\r\n          </Card.Body>\r\n          <Card.Footer className=\"text-right\">\r\n            <Form>\r\n              <Form.Group>\r\n                <Form.Control as={\"textarea\"} rows={\"3\"} name={\"message\"} value={this.state.message} onChange={this.handleChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  {this.state.messageError}\r\n                </Form.Text>\r\n              </Form.Group>\r\n              <Button variant={\"secondary\"} onClick={this.handleSend}>Send</Button>\r\n            </Form>\r\n          </Card.Footer>\r\n        </Card>\r\n    )\r\n  }\r\n}\r\n\r\nclass Notification extends React.Component {\r\n  showHeader(msg) {\r\n    if (msg.type === \"all\") {\r\n      return \"Group \" + msg.sender + \" Broadcast\";\r\n    } else if (msg.type === \"system\") {\r\n      return \"System Notification\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let size = this.props.note.length;\r\n    if (size === 0) {\r\n      return <></>;\r\n    }\r\n    return (\r\n        <div style={{position: \"absolute\", right: \"30px\", top: \"30px\"}}>\r\n          <Toast autohide delay={5000} onClose={this.props.handleClose} show={this.props.show}>\r\n            <Toast.Header>\r\n              <strong className=\"mr-auto\">{this.showHeader(this.props.note[size-1])}</strong>\r\n            </Toast.Header>\r\n            <Toast.Body>{this.props.note[size-1].text}</Toast.Body>\r\n          </Toast>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.state = {\r\n      username: \"\",\r\n      age: \"\",\r\n      region: \"na\",\r\n      school: \"washu\",\r\n      usernameError: \"\",\r\n      ageError: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(event) {\r\n    let regx = /^[0-9a-zA-Z]+$/;\r\n    if (!regx.test(this.state.username)) {\r\n      this.setState({usernameError: \"Only letters and numbers are allowed\"});\r\n      return;\r\n    } else {\r\n      this.setState({usernameError: \"\"});\r\n    }\r\n    let age = parseInt(this.state.age);\r\n    if (isNaN(age) || age <= 0) {\r\n      this.setState({ageError: \"Age must be an integer greater than 0\"});\r\n      return;\r\n    } else {\r\n      this.setState({ageError: \"\"});\r\n    }\r\n\r\n    let data = {\r\n      type: \"register\",\r\n      groupName: \"\",\r\n      sender: this.state.username,\r\n      receiver: \"\",\r\n      text: JSON.stringify({\r\n        username: this.state.username,\r\n        age: this.state.age,\r\n        location: this.state.region,\r\n        school: this.state.school\r\n      })\r\n    };\r\n    this.props.sendMessage(JSON.stringify(data));\r\n  }\r\n\r\n  showAlert(error) {\r\n    if (error !== \"\") {\r\n      return <Alert variant={\"danger\"}>{error}</Alert>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Modal size=\"md\" aria-labelledby=\"contained-modal-title-vcenter\" centered show={!this.props.registered}>\r\n          <Modal.Header>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              Register\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Form>\r\n              <Form.Group controlId=\"username\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control name=\"username\" type=\"text\" placeholder=\"Choose your username\" value={this.state.username} onChange={this.handleChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  {this.state.usernameError}\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"age\">\r\n                <Form.Label>Age</Form.Label>\r\n                <Form.Control name=\"age\" type=\"text\" placeholder=\"Enter your age\" value={this.state.age} onChange={this.handleChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                  {this.state.ageError}\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"region\">\r\n                <Form.Label>Region</Form.Label>\r\n                <Form.Control name=\"region\" as=\"select\" value={this.state.region} onChange={this.handleChange}>\r\n                  <option value=\"na\">NA</option>\r\n                  <option value=\"as\">AS</option>\r\n                  <option value=\"eu\">EU</option>\r\n                  <option vlaue=\"sa\">SA</option>\r\n                  <option value=\"oa\">OA</option>\r\n                  <option value=\"af\">AF</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"school\">\r\n                <Form.Label>School</Form.Label>\r\n                <Form.Control name=\"school\" as=\"select\" value={this.state.school} onChange={this.handleChange}>\r\n                  <option value=\"washu\">WashU</option>\r\n                  <option value=\"ucb\">UCB</option>\r\n                  <option value=\"uiuc\">UIUC</option>\r\n                  <option value=\"nyu\">NYU</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              {this.showAlert(this.props.registerError)}\r\n\r\n            </Form>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant={\"secondary\"} onClick={this.handleRegister}>Register</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nclass AccessError extends React.Component {\r\n  render() {\r\n    return (\r\n        <Modal show={this.props.show} onHide={this.props.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Sorry</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>You have to join the chat room before chatting with members</Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.props.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    )\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    webSocket.onmessage = (msg) => this.onMessage(msg);\r\n\r\n    this.switchUser = this.switchUser.bind(this);\r\n    this.updateList = this.updateList.bind(this);\r\n    this.getList = this.getList.bind(this);\r\n    this.sendMessage = this.sendMessage.bind(this);\r\n    this.addMessage = this.addMessage.bind(this);\r\n    this.clearCount = this.clearCount.bind(this);\r\n    this.handleNoteClose = this.handleNoteClose.bind(this);\r\n    this.handleAccessErrClose = this.handleAccessErrClose.bind(this);\r\n\r\n    this.state = {\r\n      list: {\r\n        owner: [],\r\n        member: [],\r\n        other: []\r\n      },\r\n      chat: {_: []},\r\n      note: [],\r\n      count: {},\r\n      group: \"\",\r\n      user: \"\",\r\n      registered: false,\r\n      registerError: \"\",\r\n      accessError: false,\r\n      username: \"\",\r\n      notification: false\r\n    };\r\n  }\r\n\r\n  updateList(data) {\r\n    data = JSON.parse(data);\r\n    this.setState({list: data});\r\n    let groups = data.owner.concat(data.member, data.other).filter(group => group.groupName === this.state.group);\r\n    if (groups.length === 0\r\n        || groups[0].joinedUsers.filter(user => user.username === this.state.user).length === 0\r\n        || groups[0].joinedUsers.filter(user => user.username === this.state.username).length === 0 ) {\r\n      this.setState({ group: \"\", user: \"\"});\r\n    }\r\n  }\r\n\r\n  getList() {\r\n    $.post(url + \"list\", JSON.stringify({username: this.state.username}), this.updateList);\r\n  }\r\n\r\n  onMessage(msgEvent) {\r\n    let msg = JSON.parse(msgEvent.data);\r\n    if (msg.type === \"ping\") {\r\n      console.log(\"keep connection alive\");\r\n    } else if (msg.type === \"register\") {\r\n      if (msg.text === \"success\") {\r\n        this.setState({\r\n          username: msg.receiver,\r\n          registered: true,\r\n        });\r\n        this.getList();\r\n      } else if (msg.text === \"conflict\") {\r\n        this.setState({\r\n          registerError: \"Username conflict. Please use another one.\"\r\n        })\r\n      }\r\n    } else if (msg.type === \"one\") {\r\n      this.addMessage(msg);\r\n      let state = this.state.count;\r\n      if (this.state.user !== msg.sender) {\r\n        if (state[msg.groupName] === undefined) {\r\n          state[msg.groupName] = {[msg.sender]: 1};\r\n        } else if (state[msg.groupName][msg.sender] === undefined) {\r\n          state[msg.groupName][msg.sender] = 1;\r\n        } else {\r\n          state[msg.groupName][msg.sender] += 1;\r\n        }\r\n      }\r\n      this.setState({ count: state});\r\n    } else {\r\n      this.addNotification(msg);\r\n    }\r\n  }\r\n\r\n  addMessage(msg) {\r\n    let chat = this.state.chat;\r\n    if (msg.sender === this.state.username && chat[msg.groupName + \"_\" + msg.receiver] === undefined) {\r\n      chat[msg.groupName + \"_\" + msg.receiver] = [{user: msg.sender, text: msg.text}];\r\n    } else if (msg.receiver === this.state.username && chat[msg.groupName + \"_\" + msg.sender] === undefined) {\r\n      chat[msg.groupName + \"_\" + msg.sender] = [{user: msg.sender, text: msg.text}];\r\n    } else if (msg.sender === this.state.username) {\r\n      chat[msg.groupName + \"_\" + msg.receiver].push({user: msg.sender, text: msg.text});\r\n    } else if (msg.receiver === this.state.username) {\r\n      chat[msg.groupName + \"_\" + msg.sender].push({user: msg.sender, text: msg.text});\r\n    }\r\n    this.setState({chat: chat});\r\n  }\r\n\r\n  addNotification(msg) {\r\n    let note = this.state.note;\r\n    note.push(msg);\r\n    this.setState({note: note, notification: true});\r\n    this.getList();\r\n  }\r\n\r\n  switchUser(id) {\r\n    let fields = id.split('_');\r\n    let rooms = this.state.list.other;\r\n    for (let i=0; i<rooms.length; ++i) {\r\n      if (rooms[i].groupName === fields[0]) {\r\n        this.setState({ accessError: true });\r\n        return;\r\n      }\r\n    }\r\n\r\n    let chat = this.state.chat;\r\n    if (chat[id] === undefined) {\r\n      chat[id] = [];\r\n    }\r\n    this.setState({group: fields[0], user: fields[1], chat: chat});\r\n  }\r\n\r\n  sendMessage(msg) {\r\n    if (msg !== \"\") {\r\n      webSocket.send(msg);\r\n    }\r\n    msg = JSON.parse(msg);\r\n    if (msg.type === \"one\") {\r\n      this.addNotification({\r\n        type: \"system\",\r\n        groupName: msg.groupName,\r\n        sender: msg.sender,\r\n        receiver: msg.receiver,\r\n        text: \"Message delivered\"\r\n      })\r\n    }\r\n  }\r\n\r\n  clearCount(groupName, username) {\r\n    let count = this.state.count;\r\n    if (count[groupName] !== undefined && count[groupName][username] !== undefined) {\r\n      count[groupName][username] = 0;\r\n    }\r\n    this.setState({ count: count});\r\n  }\r\n\r\n  handleNoteClose() {\r\n    this.setState({ notification: false });\r\n  }\r\n\r\n  handleAccessErrClose() {\r\n    this.setState({ accessError: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <ChatNavBar username={this.state.username}/>\r\n          <Container style={{margin: \"0\", width: \"auto\", maxWidth: \"none\"}}>\r\n            <Row style={{margin: \"0\"}}>\r\n              <Col md={3}>\r\n                <ChatRoomList list={this.state.list}\r\n                              count={this.state.count}\r\n                              username={this.state.username}\r\n                              switchUser={this.switchUser}\r\n                              clearCount={this.clearCount}\r\n                              sendMessage={this.sendMessage}/>\r\n              </Col>\r\n              <Col md={9}>\r\n                <ChatPanel chat={this.state.chat[this.state.group + '_' + this.state.user]}\r\n                           user={this.state.user}\r\n                           group={this.state.group}\r\n                           username={this.state.username}\r\n                           sendMessage={this.sendMessage}\r\n                           addMessage={this.addMessage}/>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <Notification note={this.state.note} show={this.state.notification} handleClose={this.handleNoteClose}/>\r\n          <Register registered={this.state.registered} registerError={this.state.registerError} sendMessage={this.sendMessage} />\r\n          <AccessError show={this.state.accessError} handleClose={this.handleAccessErrClose}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}